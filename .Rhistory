mutate(Xd_mm = X..mm.Zooid - X..mm.Junk, Yd_mm = Y..mm.Zooid - Y..mm.Junk, Zd_mm =  Z..mm.Zooid - Z..mm.Junk) %>%
mutate(Delta_X_mm = Xd_mm - lag(Xd_mm, default = first(Xd_mm)),
Delta_Y_mm = Yd_mm - lag(Yd_mm, default = first(Yd_mm)),
Delta_Z_mm = Zd_mm - lag(Zd_mm, default = first(Zd_mm))) %>%
mutate(Distance_mm = sqrt(Delta_X_mm^2 + Delta_Y_mm^2 + Delta_Z_mm^2)) %>% View()
z1 %>% arrange(Frame) %>%
mutate(Delta_time_s = Time..mins. - lag(Time..mins., default = first(Time..mins.))) %>%
mutate(Xd_mm = X..mm.Zooid - X..mm.Junk, Yd_mm = Y..mm.Zooid - Y..mm.Junk, Zd_mm =  Z..mm.Zooid - Z..mm.Junk) %>%
mutate(Delta_X_mm = Xd_mm - lag(Xd_mm, default = first(Xd_mm)),
Delta_Y_mm = Yd_mm - lag(Yd_mm, default = first(Yd_mm)),
Delta_Z_mm = Zd_mm - lag(Zd_mm, default = first(Zd_mm))) %>%
mutate(Distance_mm = sqrt(Delta_X_mm^2 + Delta_Y_mm^2 + Delta_Z_mm^2)) %>%
mutate(Speed_mm_s = Distance_mm/Delta_time_s)
wrangle <- function(df){
df %>% arrange(Frame) %>%
mutate(Delta_time_s = Time..mins. - lag(Time..mins., default = first(Time..mins.))) %>%
mutate(Xd_mm = X..mm.Zooid - X..mm.Junk, Yd_mm = Y..mm.Zooid - Y..mm.Junk, Zd_mm =  Z..mm.Zooid - Z..mm.Junk) %>%
mutate(Delta_X_mm = Xd_mm - lag(Xd_mm, default = first(Xd_mm)),
Delta_Y_mm = Yd_mm - lag(Yd_mm, default = first(Yd_mm)),
Delta_Z_mm = Zd_mm - lag(Zd_mm, default = first(Zd_mm))) %>%
mutate(Distance_mm = sqrt(Delta_X_mm^2 + Delta_Y_mm^2 + Delta_Z_mm^2)) %>%
mutate(Speed_mm_s = Distance_mm/Delta_time_s) %>% return()
}
lapply(zooid_list,df)
lapply(zooid_list,wrangle)
wrangled_list <- lapply(zooid_list,wrangle)
View(wrangled_list)
wrangled_list[[1]]
wrangled_list[[1]] %>% View()
do.call(wrangled_list, rbind)
do.call(rbind, wrangled_list)
speed_data <- do.call(rbind, wrangled_list)
ggplot(speed_data, aes(Time..mins., Speed_mm_s))+geom_point(aes(color=NumberZooid))
ggplot(speed_data, aes(Time..mins., Speed_mm_s))+geom_point(aes(color=NumberZooid %>% as.factor()))
ggplot(speed_data, aes(Time..mins., Speed_mm_s))+geom_line(aes(color=NumberZooid %>% as.factor()))
wrangle <- function(df){
df %>% arrange(Frame) %>%
mutate(Delta_time_s = Time..mins. - lag(Time..mins., default = first(Time..mins.))) %>%
mutate(Xd_mm = X..mm.Zooid - X..mm.Junk, Yd_mm = Y..mm.Zooid - Y..mm.Junk, Zd_mm =  Z..mm.Zooid - Z..mm.Junk) %>%
mutate(Delta_X_mm = Xd_mm - lag(Xd_mm, default = first(Xd_mm)),
Delta_Y_mm = Yd_mm - lag(Yd_mm, default = first(Yd_mm)),
Delta_Z_mm = Zd_mm - lag(Zd_mm, default = first(Zd_mm))) %>%
mutate(Distance_mm = sqrt(Delta_X_mm^2 + Delta_Y_mm^2 + Delta_Z_mm^2)) %>%
mutate(Speed_cm_s = 0.1*Distance_mm/Delta_time_s) %>% return()
}
wrangled_list <- lapply(zooid_list,wrangle)
speed_data <- do.call(rbind, wrangled_list)
ggplot(speed_data, aes(Time..mins., Speed_cm_s))+geom_line(aes(color=NumberZooid %>% as.factor()))
library(tidyverse)
library(ape)
library(phytools)
library(reshape2)
library(data.table)
library(geiger)
#library(corHMM)
library(bayou)
library(surface)
library(RColorBrewer)
library(phylolm)
#LOAD consensus tree
tree_salp <- read.nexus("phylogeny/RevBayes/TIMETREE_GUC-Mm+N+Sanger2_MUSCLE_output/TimeTree_GUC-Mm+N+Sanger2_MUSCLE_mcmc_MAP.tre")
setwd("~/salp_ecomorphology/")
#LOAD consensus tree
tree_salp <- read.nexus("phylogeny/RevBayes/TIMETREE_GUC-Mm+N+Sanger2_MUSCLE_output/TimeTree_GUC-Mm+N+Sanger2_MUSCLE_mcmc_MAP.tre")
plot(tree_salp)
tree_salp$tip.label
### ATTENTION: MAKE SURE THESE MAXIMIZE BRANCH LENGTHS  ####
tree_salp <- drop.tip(tree_salp, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Remove accession codes and _
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, ".+\\..+?_")
tree_salp$tip.label <- str_replace_all(tree_salp$tip.label, "_", " ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "^\\d+ ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, " D\\d+.+$")
#Correct spellings
tree_salp$tip.label[which(tree_salp$tip.label == "Cyclosalpa floridana")] <- "Cyclosalpa floridiana"
#Remove outgroups
tree_salp <- drop.tip(tree_salp, c("Pyrosomella verticillata", "Pyrosoma atlanticum", "Pyrosoma godeauxi","Pyrostremma spinosum", "Clavelina meridionalis", "Pycnoclavella aff. detorta", "Ascidia ceratodes", "Perophora sagamiensis","Megalodicopia hians", "Chelyosoma siboja", "Ciona intestinalis", "Molgula manhattensis", "Oikopleura dioica","Halocynthia igaboja", "Echinorhinus cookei", "Myxine glutinosa", "Branchiostoma floridae", "Doliolum denticulatum", "Doliolum nationalis"))
tree_salp
plot(tree_salp)
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "D\\d+.+$")
tree_salp$tip.label
tree_salp <- read.nexus("phylogeny/RevBayes/TIMETREE_GUC-Mm+N+Sanger2_MUSCLE_output/TimeTree_GUC-Mm+N+Sanger2_MUSCLE_mcmc_MAP.tre")
#Remove duplicate and ingroup undescribed salp species
### ATTENTION: MAKE SURE THESE MAXIMIZE BRANCH LENGTHS  ####
tree_salp <- drop.tip(tree_salp, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Remove accession codes and _
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, ".+\\..+?_")
tree_salp$tip.label <- str_replace_all(tree_salp$tip.label, "_", " ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "^\\d+ ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, " D\\d+.+$")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "D\\d+.+ ")
#Correct spellings
tree_salp$tip.label[which(tree_salp$tip.label == "Cyclosalpa floridana")] <- "Cyclosalpa floridiana"
#Remove outgroups
tree_salp <- drop.tip(tree_salp, c("Pyrosomella verticillata", "Pyrosoma atlanticum", "Pyrosoma godeauxi","Pyrostremma spinosum", "Clavelina meridionalis", "Pycnoclavella aff. detorta", "Ascidia ceratodes", "Perophora sagamiensis","Megalodicopia hians", "Chelyosoma siboja", "Ciona intestinalis", "Molgula manhattensis", "Oikopleura dioica","Halocynthia igaboja", "Echinorhinus cookei", "Myxine glutinosa", "Branchiostoma floridae", "Doliolum denticulatum", "Doliolum nationalis"))
#write.tree(tree_salp, "GUCMmNSanger_TimeTree_salp18Sphylo.tre")
plot(tree_salp)
tree_salp <- read.nexus("phylogeny/RevBayes/TIMETREE_GUC-Mm+N+Sanger2_MUSCLE_output/TimeTree_GUC-Mm+N+Sanger2_MUSCLE_mcmc_MAP.tre")
#Remove duplicate and ingroup undescribed salp species
### ATTENTION: MAKE SURE THESE MAXIMIZE BRANCH LENGTHS  ####
tree_salp <- drop.tip(tree_salp, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Remove accession codes and _
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, ".+\\..+?_")
tree_salp$tip.label <- str_replace_all(tree_salp$tip.label, "_", " ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "^\\d+ ")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, " D\\d+.+$")
tree_salp$tip.label <- str_remove_all(tree_salp$tip.label, "D\\d+.+? ")
plot(tree_salp)
#Correct spellings
tree_salp$tip.label[which(tree_salp$tip.label == "Cyclosalpa floridana")] <- "Cyclosalpa floridiana"
#Remove outgroups
tree_salp <- drop.tip(tree_salp, c("Pyrosomella verticillata", "Pyrosoma atlanticum", "Pyrosoma godeauxi","Pyrostremma spinosum", "Clavelina meridionalis", "Pycnoclavella aff. detorta", "Ascidia ceratodes", "Perophora sagamiensis","Megalodicopia hians", "Chelyosoma siboja", "Ciona intestinalis", "Molgula manhattensis", "Oikopleura dioica","Halocynthia igaboja", "Echinorhinus cookei", "Myxine glutinosa", "Branchiostoma floridae", "Doliolum denticulatum", "Doliolum nationalis"))
plot(tree_salp)
#remove duplicate species and undescribed ingroup
Strees <- lapply(Strees, drop.tip, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Load phylogenetic uncertainty tree set (3001 trees from RevBayes)
Strees <- read.tree("phylogeny/RevBayes/TOPOLOGY_GUC-Mm+N+Sanger2_MUSCLE_output/GUC-Mm+N+Sanger2_MUSCLE_18S.trees")
#remove duplicate species and undescribed ingroup
Strees <- lapply(Strees, drop.tip, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Remove straneous characters and Accession codes from tip labels
Strees <- lapply(Strees, function(t){t$tip.label %>%
str_remove_all(".+\\..+?_") %>%
str_replace_all("_", " ") %>%
str_remove_all("^\\d+ ") %>%
str_remove_all(" D\\d+.+$") %>%
str_remove_all("D\\d+.+? ") -> t$tip.label; return(t)})
plot(Strees[[1]])
nodelabels()
plot(Strees[[56]]);nodelabels()
#Remove outgroups
Strees <- lapply(Strees, drop.tip, c("Pyrosomella verticillata", "Pyrosoma atlanticum", "Pyrosoma godeauxi","Pyrostremma spinosum", "Clavelina meridionalis", "Pycnoclavella aff. detorta", "Ascidia ceratodes", "Perophora sagamiensis","Megalodicopia hians", "Chelyosoma siboja", "Ciona intestinalis", "Molgula manhattensis", "Oikopleura dioica","Halocynthia igaboja", "Echinorhinus cookei", "Myxine glutinosa", "Branchiostoma floridae", "Doliolum denticulatum", "Doliolum nationalis"))
#correct spelling
Strees <- lapply(Strees, function(t){t$tip.label[which(t$tip.label == "Cyclosalpa floridana")] <- "Cyclosalpa floridiana"; return(t)})
plot(Strees[[56]]);nodelabels()
plot(Strees[[6]]);nodelabels()
plot(Strees[[6]]);edgelabels()
plot(Strees[[6]]);edgelabels(0.1)
plot(Strees[[6]]);edgelabels(cex=0.1)
plot(Strees[[6]]);edgelabels(size=0.5)
plot(Strees[[6]]);edgelabels(w=0.5)
plot(Strees[[6]]);edgelabels(width=0.5)
plot(Strees[[6]]);edgelabels(width=0.1)
plot(Strees[[6]]);edgelabels(frame = "none", cex=0.5)
Strees[[6]] %>% reroot(26)
Strees[[6]] %>% reroot(26) %>% plot()
plot(Strees[[6]]);tiplabels(frame = "none", cex=0.5)
Strees[[6]] %>% reroot(13)
Strees[[6]] %>% reroot(13) %>% plot()
Strees <- read.tree("phylogeny/RevBayes/TOPOLOGY_GUC-Mm+N+Sanger2_MUSCLE_output/GUC-Mm+N+Sanger2_MUSCLE_18S.trees")
#remove duplicate species and undescribed ingroup
Strees <- lapply(Strees, drop.tip, c("HQ015387.1_Pegea_confoederata","HQ015397.1_Cyclosalpa_quadriluminis","HQ015391.1_Cyclosalpa_affinis",
"HQ015396.1_Cyclosalpa_polae","HQ015398.1_Cyclosalpa_sewelli","FM244866.1_Iasis_cylindrica","HQ015399.1_Iasis_cylindrica",
"HQ015402.1_Iasis_cylindrica","HQ015401.1_Iasis_cylindrica","HQ015413.1_Thalia_democratica","HQ015414.1_Thalia_democratica",
"D14366.1_Thalia_democratica","HQ015410.1_Ritteriella_retracta","23_D37-Rsp-B-1_Ritteriella_sp", "24_D37-Rret-OS-1_Ritteriella_retracta",
"HQ015404.1_Brooksia_rostrata","HQ015408.1_Salpa_maxima","HQ015406.1_Salpa_thompsoni", "HQ015377.1_Salpidae_gen._nov._sp._nov._A",
"FM244865.1_Ihlea_racovitzai", "KR057222.1_Brooksia_lacromae", "9_Helicosalpa_virgula_MarcHughes_specimen2",
"26_Cyclosalpa_quadriluminis_D39CquaOS1", "27_Cyclosalpa_polae_D38CpolB1", "16_Ritteriella_amboinensis_D28RambOS1",
"3_Ihlea_punctata_non-spotted_D24MhexB1", "20_Ihlea_punctata_D31IpunOS1-2", "6_Iasis_cf_cylindrica_yellow-tail_D22SyouB1"))
#Remove straneous characters and Accession codes from tip labels
Strees <- lapply(Strees, function(t){t$tip.label %>%
str_remove_all(".+\\..+?_") %>%
str_replace_all("_", " ") %>%
str_remove_all("^\\d+ ") %>%
str_remove_all(" D\\d+.+$") %>%
str_remove_all("D\\d+.+? ") -> t$tip.label; return(t)})
#reroot trees
Strees <- lapply(Strees, function(t){reroot(t, which(t$tip.labels == "Myxine glutinosa"))})
Strees[[6]]
Strees[[6]]$tip.label
#reroot trees
Strees <- lapply(Strees, function(t){reroot(t, which(t$tip.labels == "Myxine glutinosa"))})
#reroot trees
Strees <- lapply(Strees, function(t){reroot(t, which(t$tip.labels == "Echinorhinus cookei"))})
#reroot trees
Strees <- lapply(Strees, function(t){reroot(t, 80))})
#reroot trees
Strees <- lapply(Strees, function(t){reroot(t, 80)})
#Remove outgroups
Strees <- lapply(Strees, drop.tip, c("Pyrosomella verticillata", "Pyrosoma atlanticum", "Pyrosoma godeauxi","Pyrostremma spinosum", "Clavelina meridionalis", "Pycnoclavella aff. detorta", "Ascidia ceratodes", "Perophora sagamiensis","Megalodicopia hians", "Chelyosoma siboja", "Ciona intestinalis", "Molgula manhattensis", "Oikopleura dioica","Halocynthia igaboja", "Echinorhinus cookei", "Myxine glutinosa", "Branchiostoma floridae", "Doliolum denticulatum", "Doliolum nationalis"))
#correct spelling
Strees <- lapply(Strees, function(t){t$tip.label[which(t$tip.label == "Cyclosalpa floridana")] <- "Cyclosalpa floridiana"; return(t)})
#Ladderize for homogeneity in tip order
Strees <- lapply(Strees, ladderize)
#Make ultrametric
Strees <- lapply(Strees, chronos)
#Quantify each unique tree topology
ape::unique.multiPhylo(Strees, use.tip.label = F)->Strees_Unique
lapply(Strees_Unique, function(t){length(lapply(Strees, function(Tr){all.equal.phylo(t,Tr,use.edge.length = F, use.tip.label = F)}) %>% unlist() %>% .[which(.==TRUE)])}) %>% unlist() %>% as.numeric() -> BSratios
BS_ratios <- (BSratios*100)/sum(BSratios)
round(BS_ratios,2) %>% sort() %>% .[length(BS_ratios):1]
Strees_Unique <- Strees_Unique[order(BS_ratios)[length(BS_ratios):1]]
#Plot each unique tree variant
par(mfrow=c(3,3),mar=c(0,0,0,0), oma=c(0,0,0,0))
lapply(Strees_Unique[1:9],function(t){plot.phylo(t, use.edge.length = F)})
#Load literature data
salplit <- read.csv("salplit.tsv", sep="\t", stringsAsFactors = F)
traits <- read.csv("SalpPreliminaryPass.tsv", sep="\t", stringsAsFactors = F)
#correct spellings
salplit$Species[which(salplit$Species == "Iasis (Weelia) cylindrica")] <- "Iasis cylindrica"
salplit$Species[which(salplit$Species == "Soestia (Iasis) zonaria")] <- "Soestia zonaria"
#prune tree
#extended_phylo = tree_salp
#tree_salp_pruned <- drop.tip(tree_salp, which(!(tree_salp$tip.label %in% unique(traits$Species))))
tree_salp_pruned <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% unique(traits$Species))))
#prune tree
extended_phylo = tree_salp
#tree_salp_pruned <- drop.tip(tree_salp, which(!(tree_salp$tip.label %in% unique(traits$Species))))
tree_salp_pruned <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% unique(traits$Species))))
#prune traits
pruned_traits <- traits[which(traits$Species %in% extended_phylo$tip.label),]
unique_traits <- unique(pruned_traits)
kineTraits <- unique_traits[!is.na(unique_traits$Speed..cm.s.),]
rownames(kineTraits) <- kineTraits$Species
kineTree <- drop.tip(tree_salp_pruned,
which(tree_salp_pruned$tip.label %in%
traits$Species[is.na(traits$Speed..cm.s.)]))
contColors <- function(trait, color1, color2){
C <- kineTraits[,trait]
cM <- contMap(kineTree, setNames(C, kineTraits$Species))
cM$cols[1:length(cM$cols)]<-colorRampPalette(c(color1,color2), space="Lab")(length(cM$cols))
plot(cM, legend=FALSE)
add.color.bar(0.5, cM$cols,title=trait,prompt=FALSE,x=0, y=2-0.08*(Ntip(cM$tree)-1),lwd=4,fsize=0.8)
}
contColors(names(kineTraits)[15], "white", "black") #speed cm
contColors(names(kineTraits)[18], "white", "black") #speed z/s
contColors(names(kineTraits)[19], "white", "black") #speed colony
par(mfrow=c(1,1),mar=c(0,0,0,0), oma=c(0,0,0,0))
#Append species to phylogeny based on taxonomy and morphological similarity -- ARBITRARY EDGE LENGTHS
ori_phylo <- chronos(tree_salp); ori_phylo$tip.label <- (str_replace_all(tree_salp$tip.label, " ", "_"))
extended_phylo <- add.species.to.genus(ori_phylo, "Pegea sp.", "Pegea")
extended_phylo <-  bind.tip(extended_phylo, "Helicosalpa younti", position=0.15, where = 7, edge.length = 0.15+0.099358)
extended_phylo <-  bind.tip(extended_phylo, "Pegea socia", position=0.02, where = 25, edge.length = 0.02)
plot(extended_phylo)
edgelabels(extended_phylo$edge.length)
plot(extended_phylo); nodelabels(); tiplabels()
#prune tree
extended_phylo = tree_salp
#tree_salp_pruned <- drop.tip(tree_salp, which(!(tree_salp$tip.label %in% unique(traits$Species))))
tree_salp_pruned <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% unique(traits$Species))))
#prune traits
pruned_traits <- traits[which(traits$Species %in% extended_phylo$tip.label),]
unique_traits <- unique(pruned_traits)
kineTraits <- unique_traits[!is.na(unique_traits$Speed..cm.s.),]
rownames(kineTraits) <- kineTraits$Species
kineTree <- drop.tip(tree_salp_pruned,
which(tree_salp_pruned$tip.label %in%
traits$Species[is.na(traits$Speed..cm.s.)]))
contColors <- function(trait, color1, color2){
C <- kineTraits[,trait]
cM <- contMap(kineTree, setNames(C, kineTraits$Species))
cM$cols[1:length(cM$cols)]<-colorRampPalette(c(color1,color2), space="Lab")(length(cM$cols))
plot(cM, legend=FALSE)
add.color.bar(0.5, cM$cols,title=trait,prompt=FALSE,x=0, y=2-0.08*(Ntip(cM$tree)-1),lwd=4,fsize=0.8)
}
contColors(names(kineTraits)[15], "white", "black") #speed cm
contColors(names(kineTraits)[18], "white", "black") #speed z/s
contColors(names(kineTraits)[19], "white", "black") #speed colony
phenogram(kineTree, setNames(kineTraits$Speed..colonysize.min.,kineTraits$Species))
phenogram(kineTree, setNames(kineTraits$Speed..zooid.s,kineTraits$Species))
phenogram(tree_salp_pruned, setNames(unique_traits$DV.Zooid..Stolon.angle,unique_traits$Species))
#Front drag
kineTraits[,c(2,8,13)] %>% mutate(baseCSA = Zooid.area.cross.section.packing/Zooid.number)->CSA
CSA = mutate(CSA, Species = rownames(CSA))
CSAcum=CSA
for(r in 1:nrow(CSA)){
species <- CSA[r,]
for(z in 3:60){
ZN <- species
ZN$Zooid.number <- z
if(ZN)
ZN$Zooid.area.cross.section.packing <- z*ZN$baseCSA
CSAcum <- rbind(CSAcum,ZN)
}
}
CSAspeed <- left_join(CSA, kineTraits[,c(1,15,18,19)])
#ggplot(CSAspeed %>% group_by(Architecture), aes(Zooid.number, Zooid.area.cross.section.packing*baseCSA))+geom_point(aes(color=Architecture), alpha=0.5)+theme_bw()
ggplot(CSAspeed, aes(Architecture, Zooid.area.cross.section.packing)) +
geom_violin(aes(color=Architecture,fill=Architecture)) +
geom_text(label=CSAspeed$Species, vjust = 1)+
scale_color_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(CSAspeed$Architecture)))+
scale_fill_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(CSAspeed$Architecture)))+
theme_bw()
ggplot(CSAspeed, aes(Zooid.area.cross.section.packing, Speed..colonysize.min.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=CSAspeed$Species, vjust = 0.9, hjust=-0.1)+
scale_color_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(CSAspeed$Architecture)))+
theme_bw()
ggplot(kineTraits, aes(DV.Zooid..Stolon.angle, SN.Jet.Motion.angle)) +
geom_point(aes(color=Architecture)) +
geom_text(label=CSAspeed$Species, vjust = 0.9, hjust=-0.1)+
scale_color_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(CSAspeed$Architecture)))+
theme_bw()
#Power scaling
power <- full_join(CSA, kineTraits)
power %>% mutate(JetPower = Zooid.number.kine*Zooid.length.kine..cm.) %>%
ggplot(aes(JetPower, Speed..cm.s.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=power$Species, vjust = 0.9, hjust=-0.1)+
theme_bw()
glm(Speed..colonysize.min. ~ JetPower, data=power %>% mutate(JetPower = Zooid.number.kine*Zooid.length.kine..cm.)) %>%
summary()
cbind(power, glm(Speed..colonysize.min. ~ JetPower, data=power %>% mutate(JetPower = Zooid.number.kine*Zooid.length.kine..cm.)) %>%
.$residuals)->power
names(power)[31] <- "jet_scaling"
ggplot(power, aes(Architecture, jet_scaling)) +
geom_violin(aes(color=Architecture, fill=Architecture)) +
geom_text(label=power$Species)+
scale_color_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(power$Architecture)))+
theme_bw()+
scale_fill_manual(values=setNames(c("orange","chartreuse","green", "cornflowerblue", "turquoise", "turquoise", "cyan"), unique(power$Architecture)))
ggplot(kineTraits[-15,], aes(x=Zooid.number*log((Zooid.length..mm.^3)), y = Speed..colonysize.min.)) +
geom_line(aes(color=Architecture), cex=2) +
theme_bw()+
scale_color_manual(values=setNames(c("turquoise","purple","magenta", "yellow", "orange", "green", "red"), unique(unique_traits$Architecture)))+
theme(axis.text.x = element_text(angle = 90))
#Jet angle, colony speed - color is architecture
ggplot(kineTraits, aes(SN.Jet.Motion.angle, Speed..colonysize.min.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=kineTraits$Species, vjust = 0.9, hjust=-0.1)+
theme_bw()
#Zooid angle, colony speed - color is architecture
ggplot(kineTraits, aes(zDV.Zooid..Stolon.angle, Speed..colonysize.min.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=kineTraits$Species, vjust = 0.9, hjust=-0.1)+
xlim(c(0, 110))+
theme_bw()
#CSA, colony speed - color is architecture
ggplot(kineTraits, aes(Zooid.area.cross.section.packing, Speed..colonysize.min.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=kineTraits$Species, vjust = 0.9, hjust=-0.1)+
xlim(c(0, 40))+
theme_bw()
#packing, colony speed - color is architecture
ggplot(kineTraits, aes(Zooid.length.packing, Speed..colonysize.min.)) +
geom_point(aes(color=Architecture)) +
geom_text(label=kineTraits$Species, vjust = 0.9, hjust=-0.1)+
xlim(c(1, 10))+
theme_bw()
#COT, species - color is architecture
ggplot(kineTraits %>% filter(!is.na(Mean.Net.Cost..mgO2.ml.m.)), aes(x=Speed..colonysize.min., y=Mean.Net.Cost..mgO2.ml.m.)) +
geom_point(aes(color=Species, size=Speed..cm.s.)) +
theme_bw()
#COT vs %cost, species - color is architecture
ggplot(kineTraits %>% filter(!is.na(Mean.Net.Cost..mgO2.ml.m.)), aes(x=X..Cost.from.Swimming, y=Mean.Net.Cost..mgO2.ml.m.)) +
geom_point(aes(color=Species)) +
theme_bw()
ggplot(kineTraits %>% filter(!is.na(Mean.Net.Cost..mgO2.ml.m.)), aes(x=Mean.Gross.COT..mgO2.ml.m., y=DV.Zooid..Stolon.angle)) +
geom_point(aes(color=Species)) +
theme_bw()
PMScolor <- function(data, tree, x, y, chromo){
data <- data[match(tree$tip.label, data$Species),]
tip.cols <- brewer.pal(8,"Set1")[data[,chromo] %>%  as.character() %>% as.factor() %>% as.numeric()]
tip.cols <- c()
names(tip.cols)<-tree$tip.label
cols<-c(tip.cols[tree$tip.label],rep("black",tree$Nnode))
cols<-c(tip.cols[tree$tip.label],rep("black",tree$Nnode))
names(cols)<-1:(length(tree$tip)+tree$Nnode)
phylomorphospace(tree,as.matrix(data[,c(x,y)]),control=list(col.node=cols),label="horizontal", xlab=colnames(data)[x], ylab=colnames(data)[y])
}
par(oma=rep(4,4))
names(kineTraits)
simZDSV<-make.simmap(kineTree,setNames(kineTraits$Architecture,kineTraits$Species),nsim=25,model="ER")
phylomorphospace(kineTraits, simZDSV[[9]], 29, 19, 2)
ggplot(unique_traits %>% filter(!is.na(Mean.Gross.COT..mgO2.ml.m.)), aes(x=Species, y = Mean.Gross.COT..mgO2.ml.m.)) +
geom_point(aes(color=Architecture)) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
ggplot(unique_traits[-17,], aes(x=Zooid.number, y = (Colony.cross.sectional.area...mm2./(Zooid.width..mm.^2)))) +
geom_line(aes(color=Architecture), cex=2) +
theme_bw()+
scale_color_manual(values=setNames(c("turquoise","purple","magenta", "yellow", "orange", "green", "red"), unique(unique_traits$Architecture)))+
theme(axis.text.x = element_text(angle = 90))
#### [1] #### Whole colony architecture #####
morph <- setNames(unique_traits[which(unique_traits$Variable=="Chain architecture"),4], unique_traits[which(unique_traits$Variable=="Chain architecture"),1])
morph <- c(morph,setNames("Linear", "Soestia zonaria"),setNames("Oblique", "Thalia orientalis"),setNames("Transversal", "Pegea confoederata"),setNames("Whorl","Cyclosalpa quadriluminis"))
tree_salp_morph <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% names(morph))))
STree_morph <- lapply(Strees, function(t){drop.tip(t,which(!(t$tip.label %in% names(morph))))})
morph <- morph[which(names(morph) %in% tree_salp_morph$tip.label)]
morph[match(tree_salp_morph$tip.label,names(morph))] -> morph
morph <- setNames(unique_traits$Architecture, unique_traits$Species)
models=c("ER","SYM","ARD")
for(i in 1:3){
print(models[i])
fitDiscrete(tree_salp_pruned, morph, model=models[i])$opt$aicc %>% print() #instead of tree_salp_morph
}
getwd()
write.tree(extended_phylo, "RB_PCM/GUCMmNSanger2_TimeTree_salp18Sphylo.tre")
write.tree(tree_salp_morph, "RB_PCM/GUCMmNSanger2_TimeTree_salp18Sphylo.tre")
#SIMMAP plotting
Morph <- c(setNames("Linear", "Ihlea punctata"),setNames("Oblique", "Thalia orientalis"),setNames("Linear","Salpa younti"),
setNames(unique_traits[,2],unique_traits$Species), setNames("Bipinnate","Ritteriella amboinensis"),
setNames("Linear","Salpa thompsoni"), setNames("Linear","Metcalfina hexagona"), setNames("Whorl","Cyclosalpa bakeri"),
setNames("Helical","Helicosalpa virgula"))
Morph
Mphylo <- drop.tip(extended_phylo, which(extended_phylo$tip.label=="Cyclosalpa floridiana" | extended_phylo$tip.label=="Brooksia lacromae"))
Mphylo <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% names(Morph))))
write.tree(Mphylo, "RB_PCM/GUCMmNSanger2_TimeTree_salp18Sphylo.tre")
Ntip(Mphylo)
#### [4] #### Colony morphologies as transition characters with exclusionary states (1/0/NA) ####
exc_transits <- read.csv("Exclusive_states.tsv", sep='\t', header = T, stringsAsFactors = F)
exc_transits <- as.data.frame(exc_transits %>% sapply(as.character))
#model selection
models=c("ER","SYM","ARD")
par(mfrow=c(3,1))
for(t in c(2,3,5,6)){
T_I=exc_transits[,t]
names(T_I) = exc_transits$Species
for(m in 1:length(models)){
print(names(exc_transits)[t])
print(models[m])
fitDiscrete(tree_salp_morph, T_I, model=models[m]) %>% print()
simT<-make.simmap(tree_salp_morph,T_I,nsim=100,model=models[m],pi=table(T_I)/sum(table(T_I)))
par(ask=F)
obj_t<-summary(simT,plot=FALSE)
cols_t<-setNames(palette()[1:length(unique(T_I))],mapped.states(simT)[,1])
plot(obj_t,colors=cols_t,fsize=0.8,cex=c(0.9,0.5), ftype="i")
add.simmap.legend(colors=cols_t,x=0, y=4,prompt=FALSE,fsize=0.9)
ace(T_I, tree_salp_morph, type = "discrete", model=models[m]) %>% print()
}
}
#model selection including meristics
models=c("ER","SYM","ARD","meristic","meristic")
for(t in c(2:6)){
T_I=exc_transits[,t]
names(T_I) = exc_transits$Species
for(m in 1:length(models)){
print(names(exc_transits)[t])
print(models[m])
if(m>3){
fitDiscrete(tree_salp_morph, T_I, model=models[m],symmetric=ifelse(m==4,T,F))->fiti
}
else fitDiscrete(tree_salp_morph, T_I, model=models[m])->fiti
fiti$opt$aicc %>% print()
fiti$opt$k %>% print()
}
}
#SIMMAP plotting
par(mfrow=c(1,1))
for(t in c(2:6)){
T_I=exc_transits[,t]
names(T_I) = exc_transits$Species
print(names(exc_transits)[t])
simT<-make.simmap(tree_salp_morph,T_I,nsim=100,model="ER",pi=table(T_I)/sum(table(T_I)))
par(ask=F)
obj_t<-summary(simT,plot=FALSE)
cols_t<-setNames(palette()[c(3,1,2)],mapped.states(simT)[,1])
plot(obj_t,colors=cols_t,fsize=0.8,cex=c(0.9,0.5), ftype="i")
add.simmap.legend(colors=cols_t,x=0, y=4,prompt=FALSE,fsize=0.9)
}
#### [5] #### #Developmental Transition pathways as multistate characters #####
transit_paths <- read.csv("Transitions_Paths.tsv", sep='\t', header = T, stringsAsFactors = F)
#BIPPINATE PATH
bipQ <- rbind(c(0.1,0.1,0,0),c(0.1,0.1,0.1,0),c(0,0.1,0.1,0.1),c(0,0,0.1,0.1)) #Q matrix
rownames(bipQ)=colnames(bipQ)<-c("Bipinnate","Linear","Oblique","Transversal")
bipT <- transit_paths$Bipinnate_path
names(bipT) = transit_paths$Species
#SIMMAP plotting
simBip<-make.simmap(tree_salp_morph,bipT,nsim=10,pi=table(bipT)/sum(table(bipT)),model="ARD")
par(ask=F)
obj_bip<-summary(simBip,plot=FALSE)
cols_bip<-setNames(palette()[1:length(unique(bipT))],mapped.states(simBip)[,1])
plot(obj_bip,colors=cols_bip,fsize=0.8,cex=c(0.9,0.5), ftype="i")
add.simmap.legend(colors=cols_bip,x=0, y=4,prompt=FALSE,fsize=0.9,)
tree_salp_morph
morph
tree_salp_morph <- drop.tip(extended_phylo, which(!(extended_phylo$tip.label %in% names(morph))))
STree_morph <- lapply(Strees, function(t){drop.tip(t,which(!(t$tip.label %in% names(morph))))})
morph <- morph[which(names(morph) %in% tree_salp_morph$tip.label)]
morph[match(tree_salp_morph$tip.label,names(morph))] -> morph
morph <- setNames(unique_traits$Architecture, unique_traits$Species)
morph
tree_salp_morph
models=c("ER","SYM","ARD")
for(i in 1:3){
print(models[i])
fitDiscrete(tree_salp_pruned, morph, model=models[i])$opt$aicc %>% print() #instead of tree_salp_morph
}
